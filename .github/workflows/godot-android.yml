name: Godot Android APK (fast non-Gradle, no setup-* actions)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  export:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- CÀI HỆ THỐNG CẦN THIẾT (không dùng actions/setup-java hay setup-android) ---
      - name: Install system deps (JDK17, unzip, curl)
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends openjdk-17-jdk unzip curl ca-certificates
          java -version

      # --- CÀI ANDROID SDK TỐI THIỂU (cmdline-tools + platform-tools/adb) ---
      - name: Install minimal Android SDK (no GitHub actions)
        shell: bash
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        run: |
          set -euxo pipefail
          sudo mkdir -p "$ANDROID_SDK_ROOT"
          sudo chown -R $USER:$USER "$ANDROID_SDK_ROOT"
          cd "$ANDROID_SDK_ROOT"

          # Tải cmdline-tools trực tiếp từ Google (retry để tránh đứt mạng)
          CTL_ZIP="commandlinetools-linux-11076708_latest.zip"
          curl -L --retry 5 --retry-delay 5 -o "$CTL_ZIP" "https://dl.google.com/android/repository/${CTL_ZIP}"
          mkdir -p cmdline-tools
          unzip -q "$CTL_ZIP" -d cmdline-tools
          # Đặt đúng cấu trúc .../cmdline-tools/latest/...
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          rm -f "$CTL_ZIP"

          # Cập nhật & cài platform-tools (chỉ cần adb để Godot validate SDK)
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" --licenses || true
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" "platform-tools"
          "$ANDROID_SDK_ROOT/platform-tools/adb" version || true

      # --- GODOT HEADLESS + EXPORT TEMPLATES ---
      - name: Download Godot headless + templates (3.5.3)
        shell: bash
        run: |
          set -euxo pipefail
          TDIR="$HOME/.local/share/godot/templates/3.5.3.stable"
          mkdir -p "$TDIR"

          curl -L --retry 5 --retry-delay 5 -o godot.zip \
            https://github.com/godotengine/godot-builds/releases/download/3.5.3-stable/Godot_v3.5.3-stable_linux_headless.64.zip
          unzip -q godot.zip -d godot_bin
          mv godot_bin/Godot_v3.5.3-stable_linux_headless.64 godot
          chmod +x godot

          curl -L --retry 5 --retry-delay 5 -o templates.tpz \
            https://github.com/godotengine/godot-builds/releases/download/3.5.3-stable/Godot_v3.5.3-stable_export_templates.tpz
          unzip -q templates.tpz -d "$TDIR"

          # Di chuyển android_{debug,release}.apk ra đúng cấp thư mục version (Godot 3.x yêu cầu)
          if [ -f "$TDIR/templates/android_debug.apk" ]; then mv "$TDIR/templates/android_debug.apk" "$TDIR/android_debug.apk"; fi
          if [ -f "$TDIR/templates/android_release.apk" ]; then mv "$TDIR/templates/android_release.apk" "$TDIR/android_release.apk"; fi
          ls -lah "$TDIR" || true

      # --- TẠO DEBUG KEYSTORE CHO ANDROID ---
      - name: Create Android debug keystore
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p "$HOME/.android"
          if [ ! -f "$HOME/.android/debug.keystore" ]; then
            keytool -genkeypair -noprompt \
              -alias androiddebugkey \
              -keystore "$HOME/.android/debug.keystore" \
              -storepass android -keypass android \
              -dname "CN=Android Debug,O=Android,C=US" \
              -keyalg RSA -keysize 2048 -validity 10000
          fi
          ls -lah "$HOME/.android"

      # --- GHI TRỰC TIẾP EDITOR SETTINGS VỚI ĐỦ KHÓA export/android/* ---
      - name: Write EditorSettings (force keys)
        shell: bash
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        run: |
          set -euxo pipefail
          CFG="$HOME/.config/godot"
          SDK="$ANDROID_SDK_ROOT"
          ADB="$SDK/platform-tools/adb"
          KS="$HOME/.android/debug.keystore"

          mkdir -p "$CFG"
          cat > "$CFG/editor_settings-3.tres" <<EOF
          [gd_resource type="EditorSettings" load_steps=2 format=2]

          [resource]
          config_version=4
          export/android/adb = "${ADB}"
          # set cả hai key để Godot 3 chắc chắn nhận SDK:
          export/android/sdk_path = "${SDK}"
          export/android/android_sdk_path = "${SDK}"
          export/android/debug_keystore = "${KS}"
          export/android/debug_keystore_user = "androiddebugkey"
          export/android/debug_keystore_pass = "android"
          EOF

          echo "=== editor_settings-3.tres ==="
          cat "$CFG/editor_settings-3.tres"
          echo "=== verify keys ==="
          egrep -n "export/android/(android_sdk_path|sdk_path|adb|debug_keystore(_user|_pass)?)" "$CFG/editor_settings-3.tres" || true

      # --- ĐẢM BẢO PRESET ANDROID & TẮT GRADLE (BUILD NHANH) ---
      - name: Ensure export_presets.cfg (Android preset, non-Gradle)
        shell: bash
        run: |
          set -euxo pipefail
          cat > export_presets.cfg <<'EOF'
          [preset.0]
          name="Android"
          platform="Android"
          runnable=true
          custom_features=""
          export_filter="all_resources"
          include_filter=""
          exclude_filter=""
          export_path="build/android/OfflineRPG.apk"
          script_export_mode=1
          script_encryption_key=""
          advanced_options=false

          [preset.0.options]
          package/unique_name="com.example.offlinerpg"
          version/code=1
          version/name="1.0.0"
          architectures/armeabi-v7a=true
          architectures/arm64-v8a=true
          architectures/x86=false
          architectures/x86_64=false
          gradle_build/use_gradle_build=false
          gradle_build/use_androidx=true
          permissions/Internet=false
          apk_expansion/enable=false
          EOF
          echo "== Presets =="; grep -E '^\[preset|^name=' -n export_presets.cfg || true

      # --- EXPORT APK (non-Gradle, debug) ---
      - name: Export Android APK (non-Gradle, debug)
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p build/android
          ./godot -v --headless --path . --export-debug "Android" build/android/OfflineRPG.apk
          ls -lah build/android

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: OfflineRPG-apk
          path: build/android/*.apk
